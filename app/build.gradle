apply plugin: 'com.android.application'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {

    compileSdkVersion 26
    buildToolsVersion '27.0.1'

    defaultConfig {
        applicationId "com.ereinecke.eatsafe"
        minSdkVersion 17
        targetSdkVersion 26
        versionCode 4
        versionName "0.72-alpha"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        pickFirst 'META-INF/LICENSE'
    }
}

ext {
    supportLibVersion = "26.1.0"
    constraintLayoutVersion = "1.0.2"
    archLifecycleVersion = "1.0.0"
    archRoomVersion = "1.0.0"
    butterKnifeVersion = "8.6.0"
    retrofitVersion = "2.3.0"
    jacksonLibVersion = "2.7.3"
    testLibVersion = "0.5"
    espressoLibVersion = "3.0.1"
}

repositories {
    maven {
        url "https://s3.amazonaws.com/repo.commonsware.com"
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    compile "com.android.support:support-v13:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:support-v4:${supportLibVersion}"
    compile "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"
    compile 'com.google.firebase:firebase-ads:11.6.2'

    /* Testing & instrumentation dependencies */
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile "com.android.support.test.espresso:espresso-core:${espressoLibVersion}"
    androidTestCompile "com.android.support.test.espresso:espresso-intents:${espressoLibVersion}"
    androidTestCompile "com.android.support.test:runner:${testLibVersion}"
    androidTestCompile "com.android.support.test:rules:${testLibVersion}"

    /* Android architecture components introduced with O */
    compile "android.arch.lifecycle:extensions:${archLifecycleVersion}"
    compile "android.arch.persistence.room:runtime:${archRoomVersion}"
    annotationProcessor "android.arch.lifecycle:compiler:${archLifecycleVersion}"
    annotationProcessor "android.arch.persistence.room:compiler:${archRoomVersion}"

    /* Butterknife */
    compile "com.jakewharton:butterknife:${butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"

    /* Retrofit */
    compile "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    compile "com.squareup.retrofit2:converter-jackson:${retrofitVersion}"
    compile 'com.squareup.okhttp3:logging-interceptor:3.8.0'

    /* GreenDAO */
    compile 'org.greenrobot:greendao:3.2.0'

    /* Jackson for JSON */
    compile "com.fasterxml.jackson.core:jackson-core:${jacksonLibVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonLibVersion}"
    compile "com.fasterxml.jackson.core:jackson-annotations:${jacksonLibVersion}"

    // Set this dependency to use JUnit 4 rules
    androidTestCompile "com.android.support.test:rules:${testLibVersion}"

    // Set this dependency to build and run Espresso tests
    // androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    configurations.all {
        resolutionStrategy.force "com.android.support:support-annotations:23.0.1"
    }

    /* StreamProvider, workaround for FileProvider issues */
    compile 'com.commonsware.cwac:provider:0.4.0'

    /* Sugar ORM */
    compile 'com.github.satyan:sugar:1.5'

    /* ZXing barcode scanner */
    compile 'me.dm7.barcodescanner:zxing:1.9'
    compile 'com.journeyapps:zxing-android-embedded:3.3.0'

    /* Image slider */
    compile 'com.hkm.loyalslider:library:1.9.4'

    /* About page library, adds credits for all libraries used */
    compile('com.mikepenz:aboutlibraries:5.9.6@aar') {
        transitive = true
    }

    /* Material Design toast library */
    compile 'net.steamcrafted:load-toast:1.0.10'

    /* SuperToasts library */
    compile 'com.github.johnpersano:supertoasts:2.0'
}

apply plugin: 'com.google.gms.google-services'
